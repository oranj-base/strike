type AddRegistryParams = record {
  website_url : opt text;
  twitter : opt text;
  name : text;
  canister_id : principal;
  description : text;
  email : text;
  project_name : text;
  telegram : opt text;
};
type GetRegistriesParams = record {
  status : opt StrikeStatus;
  pagination : Pagination;
};
type PaginatedResponse = record { total : nat32; items : vec StrikeRegistry };
type Pagination = record { page : nat32; pageSize : nat32 };
type Result = variant { Ok; Err : text };
type StrikeRegistry = record {
  status : StrikeStatus;
  website_url : opt text;
  twitter : opt text;
  name : text;
  canister_id : principal;
  added_by : principal;
  description : text;
  created_at : nat64;
  email : text;
  module_hash : opt text;
  project_name : text;
  telegram : opt text;
};
type StrikeStatus = variant { Blocked; Submitted; Trusted };
type UpdateRegistryStatusParams = record {
  status : StrikeStatus;
  canister_id : principal;
};
service : () -> {
  add_admin : (principal) -> (Result);
  add_registry : (AddRegistryParams) -> (Result);
  get_admins : () -> (vec principal);
  get_registries : (GetRegistriesParams) -> (PaginatedResponse) query;
  get_strike_by_canister_id : (principal) -> (opt StrikeRegistry) query;
  is_admin : (principal) -> (bool) query;
  remove_admin : (principal) -> (Result);
  update_registry_status : (UpdateRegistryStatusParams) -> (Result);
}
